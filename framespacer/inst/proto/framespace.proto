syntax = "proto3";

// FrameSpace Service
//
// FrameSpace Service API consists of FrameSpace models
// along with Request and Response objects for endpoints. 
package framespace;

import "imports/struct.proto";


// Axis represents the top level description of a KeySpace
// such as Samples, Genomic Labels, Clinical Terms.
// Note: Experimental measurements are Units, not axes. 
message Axis {
  string name = 1;
  string description = 2;
}

// SearchAxesRequest is a POST to /axes/search 
// Search criteria: all axes or search by axis name.
message SearchAxesRequest {
  repeated string names = 1;
  int32 pageSize = 2;
  string pageToken = 3;
}

// SearchAxesResponse returned from /axes/search
message SearchAxesResponse {
  repeated Axis axes = 1;
  string nextPageToken = 2;
}

// KeySpace is the set of keys that a project has defined, 
// for a given axis space, Example: (sample1, sample2, sample3).
// Restrictions on keys can be defined in the metadata field.
// A key is defined as an entity identifier. 
message KeySpace {
  string id = 1;
  string name = 2;
  string axisName = 3;
  repeated string keys = 4;
  map<string, string> metadata = 5;
}

// SearchKeySpacesRequest is a POST to /keyspaces/search 
// Search criteria: search by keyspace name/id, axis name, and keys.
// An axis name is required in the request.
message SearchKeySpacesRequest {
  repeated string keyspaceIds = 1;
  repeated string names = 2;
  repeated string axisNames = 3;
  repeated string keys = 4;
  int32 pageSize = 5;
  string pageToken = 6;
}

// SearchKeySpacesResponse returned from /keyspaces/search
message SearchKeySpacesResponse {
  repeated KeySpace keyspaces = 1;
  string nextPageToken = 2;
}

// A keyset is a subset of keys from a KeySpace.
// Actual subset is defined by the keys list. 
// A key in a set must belong to the keyspace identifed by id.
message KeySet {
  string keyspaceId = 1;
  repeated string keys = 2;
}

// Unit is a basic message enforcing a label naming the measurement,
// a description to identify specific info about this measurement.
// Units have ids because unit names can be arbitary.
message Unit {
  string id = 1;
  string name = 2;
  string description = 3;
}

// SearchUnitsRequest is a POST to /units/search
// Search for available units of measurement.
// Search criteria: all units, filter by unit id/name.
message SearchUnitsRequest {
  repeated string ids = 1;
  repeated string names = 2;
  int32 pageSize = 3;
  string pageToken = 4;
}

// SearchUnitsResponse is returned from /units/search
message SearchUnitsResponse {
  repeated Unit units = 1;
  string nextPageToken = 2;
}

// A DataFrame is a consolidation of vectors, which may belong to one
// or more keyspaces. The DataFrame metadata holds the information on 
// the keyspaces and units bound to the dataframe instance.
message DataFrame {
  string id = 1;
  map<string, string> metadata = 2;
  map<string, google.protobuf.Struct> contents = 3;
}

// BuildDataFrameRequest is a POST to /dataframe
// Return a set of vectors based on major keyspaces,
// minor keyspaces, and units. 
message BuildDataFrameRequest {
  repeated KeySet major = 1;
  repeated KeySet minor = 2;
  repeated Unit units = 3;
  int32 pageSize = 4;
}
